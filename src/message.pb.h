// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

/*
#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif
*/

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class requestMsg;
class replyMsg;

// ===================================================================

class requestMsg : public ::google::protobuf::Message {
 public:
  requestMsg();
  virtual ~requestMsg();

  requestMsg(const requestMsg& from);

  inline requestMsg& operator=(const requestMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const requestMsg& default_instance();

  void Swap(requestMsg* other);

  // implements Message ----------------------------------------------

  requestMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const requestMsg& from);
  void MergeFrom(const requestMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string regStr = 1;
  inline bool has_regstr() const;
  inline void clear_regstr();
  static const int kRegStrFieldNumber = 1;
  inline const ::std::string& regstr() const;
  inline void set_regstr(const ::std::string& value);
  inline void set_regstr(const char* value);
  inline void set_regstr(const char* value, size_t size);
  inline ::std::string* mutable_regstr();
  inline ::std::string* release_regstr();
  inline void set_allocated_regstr(::std::string* regstr);

  // required string targetStr = 2;
  inline bool has_targetstr() const;
  inline void clear_targetstr();
  static const int kTargetStrFieldNumber = 2;
  inline const ::std::string& targetstr() const;
  inline void set_targetstr(const ::std::string& value);
  inline void set_targetstr(const char* value);
  inline void set_targetstr(const char* value, size_t size);
  inline ::std::string* mutable_targetstr();
  inline ::std::string* release_targetstr();
  inline void set_allocated_targetstr(::std::string* targetstr);

  // @@protoc_insertion_point(class_scope:requestMsg)
 private:
  inline void set_has_regstr();
  inline void clear_has_regstr();
  inline void set_has_targetstr();
  inline void clear_has_targetstr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* regstr_;
  ::std::string* targetstr_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static requestMsg* default_instance_;
};
// -------------------------------------------------------------------

class replyMsg : public ::google::protobuf::Message {
 public:
  replyMsg();
  virtual ~replyMsg();

  replyMsg(const replyMsg& from);

  inline replyMsg& operator=(const replyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const replyMsg& default_instance();

  void Swap(replyMsg* other);

  // implements Message ----------------------------------------------

  replyMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const replyMsg& from);
  void MergeFrom(const replyMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:replyMsg)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static replyMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// requestMsg

// required string regStr = 1;
inline bool requestMsg::has_regstr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void requestMsg::set_has_regstr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void requestMsg::clear_has_regstr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void requestMsg::clear_regstr() {
  if (regstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regstr_->clear();
  }
  clear_has_regstr();
}
inline const ::std::string& requestMsg::regstr() const {
  // @@protoc_insertion_point(field_get:requestMsg.regStr)
  return *regstr_;
}
inline void requestMsg::set_regstr(const ::std::string& value) {
  set_has_regstr();
  if (regstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regstr_ = new ::std::string;
  }
  regstr_->assign(value);
  // @@protoc_insertion_point(field_set:requestMsg.regStr)
}
inline void requestMsg::set_regstr(const char* value) {
  set_has_regstr();
  if (regstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regstr_ = new ::std::string;
  }
  regstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:requestMsg.regStr)
}
inline void requestMsg::set_regstr(const char* value, size_t size) {
  set_has_regstr();
  if (regstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regstr_ = new ::std::string;
  }
  regstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:requestMsg.regStr)
}
inline ::std::string* requestMsg::mutable_regstr() {
  set_has_regstr();
  if (regstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    regstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:requestMsg.regStr)
  return regstr_;
}
inline ::std::string* requestMsg::release_regstr() {
  clear_has_regstr();
  if (regstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = regstr_;
    regstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void requestMsg::set_allocated_regstr(::std::string* regstr) {
  if (regstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regstr_;
  }
  if (regstr) {
    set_has_regstr();
    regstr_ = regstr;
  } else {
    clear_has_regstr();
    regstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:requestMsg.regStr)
}

// required string targetStr = 2;
inline bool requestMsg::has_targetstr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void requestMsg::set_has_targetstr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void requestMsg::clear_has_targetstr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void requestMsg::clear_targetstr() {
  if (targetstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetstr_->clear();
  }
  clear_has_targetstr();
}
inline const ::std::string& requestMsg::targetstr() const {
  // @@protoc_insertion_point(field_get:requestMsg.targetStr)
  return *targetstr_;
}
inline void requestMsg::set_targetstr(const ::std::string& value) {
  set_has_targetstr();
  if (targetstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetstr_ = new ::std::string;
  }
  targetstr_->assign(value);
  // @@protoc_insertion_point(field_set:requestMsg.targetStr)
}
inline void requestMsg::set_targetstr(const char* value) {
  set_has_targetstr();
  if (targetstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetstr_ = new ::std::string;
  }
  targetstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:requestMsg.targetStr)
}
inline void requestMsg::set_targetstr(const char* value, size_t size) {
  set_has_targetstr();
  if (targetstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetstr_ = new ::std::string;
  }
  targetstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:requestMsg.targetStr)
}
inline ::std::string* requestMsg::mutable_targetstr() {
  set_has_targetstr();
  if (targetstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    targetstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:requestMsg.targetStr)
  return targetstr_;
}
inline ::std::string* requestMsg::release_targetstr() {
  clear_has_targetstr();
  if (targetstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = targetstr_;
    targetstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void requestMsg::set_allocated_targetstr(::std::string* targetstr) {
  if (targetstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete targetstr_;
  }
  if (targetstr) {
    set_has_targetstr();
    targetstr_ = targetstr;
  } else {
    clear_has_targetstr();
    targetstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:requestMsg.targetStr)
}

// -------------------------------------------------------------------

// replyMsg

// required int32 result = 1;
inline bool replyMsg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void replyMsg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void replyMsg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void replyMsg::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 replyMsg::result() const {
  // @@protoc_insertion_point(field_get:replyMsg.result)
  return result_;
}
inline void replyMsg::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:replyMsg.result)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
